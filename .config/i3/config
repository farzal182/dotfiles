# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# Change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:URWGothic-Book 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec st
bindsym $mod+Shift+Return exec urxvt

# kill focused window
bindsym $mod+Shift+q kill

# Window title alignment
title_align center

# start program launcher
bindsym $mod+d exec "dmenu_run -nf '#9e9e9e' -nb '#282c34' -sb '#282c34' -sf '#ffffff' -fn 'Ubuntu Nerd Font:pixelsize=12' -p 'Application:'

# Apps Launched with <SUPER> + <KEYPAD 1-9>
bindsym $mod+Ctrl+1 exec st -e htop
bindsym $mod+Ctrl+2 exec st -e alsamixer
bindsym $mod+Ctrl+3 exec st -e nmtui
bindsym $mod+Ctrl+4 exec st -e cmus
bindsym $mod+Ctrl+5 exec st -e ranger
bindsym $mod+Ctrl+6 exec st -e tmux
bindsym $mod+Ctrl+9 exec st -e vim ~/.config/i3/config
bindsym $mod+Ctrl+0 exec st -e lynx -cfg=~/.lynx.cfg -lss=~/.lynx.lss http://www.github.com/farzal182

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Brightness Control
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Start Application
bindsym $mod+Shift+w exec firefox
bindsym $mod+Ctrl+w exec brave-browser
bindsym $mod+Shift+f exec nautilus
bindsym $mod+Shift+e exec gnome-text-editor

# enable or disable focus on mouse hover (yes | no)
#focus_follows_mouse no

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
#workspace_auto_back_and_forth yes
#bindsym $mod+b workspace back_and_forth
#bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+h split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod+q split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Sticky Floating Windows
bindsym $mod+Shift+plus sticky toggle
#bindsym $mod+Shift+s exec ~/.i3/i3-display-swap.sh

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Make the Currently Focused Window a Scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the First Scratchpad Window
bindsym $mod+minus scratchpad show

# Navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# switch to output
#bindsym $mod+shift+F6 focus output VGA-1
#bindsym $mod+F6 move workspace to output VGA-1

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# Workspace names
set $ws1 "dev"
set $ws2 "www"
set $ws3 "sys"
set $ws4 "doc"
set $ws5 "mus"
set $ws6 "chat"
set $ws7 "vid"
set $ws8 "gfx"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8

# Assign startup application to specific workspace
assign [class="st"] $ws1
assign [class="Firefox"] $ws2
assign [class="brave-browser"] $ws2
assign [class="Code"] $ws2
assign [class="lxappearance"] $ws3
assign [class="inkscape"] $ws8

## Open specific app in floating mode
for_window [title="nautilus"] floating enable sticky enable border normal
for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="nmtui"] floating enable border pixel 1
for_window [class="URxvt"] floating enable border pixel 1
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Lxappearance"] floating enable sticky enable border normal

# reload the configuration file
bindsym $mod+F5 reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+F5 restart

# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Create Log out, Reboot, Poweroff bindings
bindsym $mod+Shift+F4 mode "Exit (L)ogout, (R)eboot, (S)hutdown"
mode "Exit (L)ogout, (R)eboot, (S)hutdown" {
        bindsym r exec systemctl reboot
        bindsym l exit
        bindsym s exec systemctl poweroff

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}


# Autostart applications
exec_always --no-startup-id feh --bg-fill -Z ~/Pictures/.wallpapers/nord_wallpapers.jpg
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager
exec --no-startup-id compton ~/.config/compton/compton.conf
exec --no-startup-id dunst -config ~/.config/dunst/duntsrc

# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Theme colors
# class                   border  backgr. text    indic.   child_border
  client.focused          #556064 #556064 #FFFFFF #FDF6E3
  client.focused_inactive #2F3D44 #2F3D44 #9E9E9E #454948
  client.unfocused        #2F3D44 #2F3D44 #9E9E9E #454948
  client.urgent           #CB4B16 #FDF6E3 #9E9E9E #268BD2
  client.placeholder      #000000 #0C0C0C #FFFFFF #000000 

  client.background       #282c34


# Start i3bar to display a workspace bar (plus the system information i3status
bar {
    status_command    i3status
    #mode              hide
    position          top
    output            primary
    tray_output       primary
    font pango:       Ubuntu Nerd Font 8.5
    separator_symbol  " | "

    colors {
           background    #282c34
           statusline    #abb2bf
           separator     #abb2bf
           
           # class             	border    	bg        	text
           focused_workspace  	#282c34  	#282c34  	#ffffff
           active_workspace   	#282c34  	#282c34  	#abb2bf
           inactive_workspace 	#282c34  	#282c34  	#abb2bf
           urgent_workspace   	#282c34  	#282c34  	#ff000
           binding_mode        	#282c34  	#282c34  	#d32f2
    }
}

### setting for i3-gaps
gaps inner 10
gaps outer -4

bindsym $mod+Shift+g gaps inner all set 6; gaps outer all set 2
bindsym $mod+Shift+n gaps inner all set 0; gaps outer all set 0

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Activate smart borders (always)
smart_borders on

# Activate smart borders (only when there are effectively no gaps)
#smart_borders no_gaps

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

# What follows here is optional and defines a mode that allows you to resize the gaps on the fly.
# Press $mod1+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. 
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod1+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

                                                                                 bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
